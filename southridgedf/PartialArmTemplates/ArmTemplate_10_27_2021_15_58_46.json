{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "southridgedf"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/GetStreaming')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Streaming",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "StreamingSynapseOHDW",
								"type": "DatasetReference"
							},
							"name": "OHSynapseDW"
						}
					],
					"transformations": [
						{
							"name": "StreamingSales"
						}
					],
					"script": "source(output(\n\t\tTransactionID as string,\n\t\tCustomerID as string,\n\t\tMovieID as string,\n\t\tStreamStart as string,\n\t\tStreamEnd as string,\n\t\tCreatedDate as string,\n\t\tUpdatedDate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource1 derive(SourceSystemId = 1,\n\t\tdtStreamStart = toTimestamp(StreamStart),\n\t\tdtStreamEnd = toTimestamp(StreamEnd),\n\t\tdtCreatedDate = toTimestamp(CreatedDate),\n\t\tdtUpdatedDate = toTimestamp(UpdatedDate)) ~> StreamingSales\nStreamingSales sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tTransactionID as string,\n\t\tCustomerID as string,\n\t\tMovieID as string,\n\t\tStreamStart as timestamp,\n\t\tStreamEnd as timestamp,\n\t\tCreatedDate as timestamp,\n\t\tUpdatedDate as timestamp,\n\t\tSourceSystemId as integer\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 1,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tTransactionID,\n\t\tCustomerID,\n\t\tMovieID,\n\t\tStreamStart = dtStreamStart,\n\t\tStreamEnd = dtStreamEnd,\n\t\tCreatedDate = dtCreatedDate,\n\t\tUpdatedDate = dtUpdatedDate,\n\t\tSourceSystemId\n\t)) ~> OHSynapseDW"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/StreamingSynapseOHDW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/StreamingSynapseOHDW')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OHSynapseDW",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "TransactionID",
						"type": "nvarchar"
					},
					{
						"name": "CustomerID",
						"type": "nvarchar"
					},
					{
						"name": "MovieID",
						"type": "nvarchar"
					},
					{
						"name": "StreamStart",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "StreamEnd",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "UpdatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "SourceSystemId",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "",
					"table": "Streaming"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/GetCustomers')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SouthridgeCustomersAddresses",
								"type": "DatasetReference"
							},
							"name": "SouthridgeStreamingCustomers"
						},
						{
							"dataset": {
								"referenceName": "SouthridgeStreamingAddresses",
								"type": "DatasetReference"
							},
							"name": "SouthridgeStreamingAddresses"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "StreamingCustomersOHDW",
								"type": "DatasetReference"
							},
							"name": "OHSynapseDW"
						}
					],
					"transformations": [
						{
							"name": "Join1"
						},
						{
							"name": "CustomersAddresses"
						}
					],
					"script": "source(output(\n\t\tCustomerID as string,\n\t\tLastName as string,\n\t\tFirstName as string,\n\t\tPhoneNumber as string,\n\t\tCreatedDate as string,\n\t\tUpdatedDate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SouthridgeStreamingCustomers\nsource(output(\n\t\tAddressID as string,\n\t\tCustomerID as string,\n\t\tAddressLine1 as string,\n\t\tAddressLine2 as string,\n\t\tCity as string,\n\t\tState as string,\n\t\tZipCode as string,\n\t\tCreatedDate as string,\n\t\tUpdatedDate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SouthridgeStreamingAddresses\nSouthridgeStreamingCustomers, SouthridgeStreamingAddresses join(SouthridgeStreamingCustomers@CustomerID == SouthridgeStreamingAddresses@CustomerID,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join1\nJoin1 derive(SourceSystemId = 1) ~> CustomersAddresses\nCustomersAddresses sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tCustomerID = SouthridgeStreamingCustomers@CustomerID,\n\t\tLastName,\n\t\tFirstName,\n\t\tPhoneNumber,\n\t\tCreatedDate = SouthridgeStreamingCustomers@CreatedDate,\n\t\tUpdatedDate = SouthridgeStreamingCustomers@UpdatedDate,\n\t\tAddressID,\n\t\tCustomerID = SouthridgeStreamingAddresses@CustomerID,\n\t\tAddressLine1,\n\t\tAddressLine2,\n\t\tCity,\n\t\tState,\n\t\tZipCode,\n\t\tCreatedDate = SouthridgeStreamingAddresses@CreatedDate,\n\t\tUpdatedDate = SouthridgeStreamingAddresses@UpdatedDate,\n\t\tSourceSystemId\n\t)) ~> OHSynapseDW"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SouthridgeCustomersAddresses')]",
				"[concat(variables('factoryId'), '/datasets/SouthridgeStreamingAddresses')]",
				"[concat(variables('factoryId'), '/datasets/StreamingCustomersOHDW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SouthridgeCustomersCSV')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "https://southridgesa.dfs.core.windows.net",
					"accountKey": {
						"type": "SecureString",
						"value": "**********"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SouthridgeCustomersAddresses')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SouthridgeCustomersCSV",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "dboCustomers.csv",
						"fileSystem": "cloudstreaming"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CustomerID",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "PhoneNumber",
						"type": "String"
					},
					{
						"name": "CreatedDate",
						"type": "String"
					},
					{
						"name": "UpdatedDate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SouthridgeCustomersCSV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SouthridgeStreamingAddresses')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SouthridgeCustomersCSV",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "dboAddresses.csv",
						"fileSystem": "cloudstreaming"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "AddressID",
						"type": "String"
					},
					{
						"name": "CustomerID",
						"type": "String"
					},
					{
						"name": "AddressLine1",
						"type": "String"
					},
					{
						"name": "AddressLine2",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "State",
						"type": "String"
					},
					{
						"name": "ZipCode",
						"type": "String"
					},
					{
						"name": "CreatedDate",
						"type": "String"
					},
					{
						"name": "UpdatedDate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SouthridgeCustomersCSV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/StreamingCustomersOHDW')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OHSynapseDW",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": "",
					"table": "Customers"
				}
			},
			"dependsOn": []
		}
	]
}